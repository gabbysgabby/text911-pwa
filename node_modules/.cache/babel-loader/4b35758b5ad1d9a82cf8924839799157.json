{"ast":null,"code":"var _jsxFileName = \"/Users/Gabby/text911-reactpwa/src/components/Map/Map.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { GoogleMap, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport MapStyles from '../../utils/mapStyles.json';\nimport MarkerInfo from '../MarkerInfo/MarkerInfo';\nimport './Map.css';\nvar Map = compose(withScriptjs, withGoogleMap)(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 16,\n    center: {\n      lat: 37.8006568,\n      lng: -122.4516305\n    },\n    defaultOptions: {\n      styles: MapStyles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.showingPlaces.length === 0 ? props.places.map(function (place) {\n    return React.createElement(MarkerInfo, {\n      key: place.id,\n      place: place,\n      onToggleOpen: props.onToggleOpen,\n      showInfoId: props.showInfoId,\n      action: props.action,\n      markerAnimation: props.markerAnimation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }) : props.showingPlaces.map(function (place) {\n    return React.createElement(MarkerInfo, {\n      key: place.id,\n      place: place,\n      onToggleOpen: props.onToggleOpen,\n      showInfoId: props.showInfoId,\n      action: props.action,\n      markerAnimation: props.markerAnimation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }));\n});\nMap.propTypes = {\n  onToggleOpen: PropTypes.func.isRequired,\n  showInfoId: PropTypes.string.isRequired,\n  action: PropTypes.bool.isRequired,\n  places: PropTypes.array.isRequired,\n  showingPlaces: PropTypes.array.isRequired\n}; // Note: This example requires that you consent to location sharing when\n// prompted by your browser. If you see the error \"The Geolocation service\n// failed.\", it means you probably did not give permission for the browser to\n// locate you.\n\nvar map, infoWindow;\n\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById('map'), {\n    center: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    zoom: 16\n  });\n  infoWindow = new google.maps.InfoWindow(); // Try HTML5 geolocation.\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var pos = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      infoWindow.setPosition(pos);\n      infoWindow.setContent('Your Emergency Location');\n      infoWindow.open(map);\n      map.setCenter(pos);\n    }, function () {\n      handleLocationError(true, infoWindow, map.getCenter());\n    });\n  } else {\n    // Browser doesn't support Geolocation\n    handleLocationError(false, infoWindow, map.getCenter());\n  }\n}\n\nfunction handleLocationError(browserHasGeolocation, infoWindow, pos) {\n  infoWindow.setPosition(pos);\n  infoWindow.setContent(browserHasGeolocation ? 'Error: The Geolocation service failed.' : 'Error: Your browser doesn\\'t support geolocation.');\n  infoWindow.open(map);\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/Gabby/text911-reactpwa/src/components/Map/Map.js"],"names":["React","PropTypes","compose","GoogleMap","withGoogleMap","withScriptjs","MapStyles","MarkerInfo","Map","props","lat","lng","styles","showingPlaces","length","places","map","place","id","onToggleOpen","showInfoId","action","markerAnimation","propTypes","func","isRequired","string","bool","array","infoWindow","initMap","google","maps","document","getElementById","center","zoom","InfoWindow","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","setPosition","setContent","open","setCenter","handleLocationError","getCenter","browserHasGeolocation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,YAAnC,QAAuD,mBAAvD;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,WAAP;AAEA,IAAMC,GAAG,GAAGN,OAAO,CACjBG,YADiB,EAEjBD,aAFiB,CAAP,CAGV,UAAAK,KAAK;AAAA,SACL,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,UAAP;AAAmBC,MAAAA,GAAG,EAAE,CAAC;AAAzB,KAFV;AAGE,IAAA,cAAc,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGG,KAAK,CAACI,aAAN,CAAoBC,MAApB,KAA+B,CAA/B,GACGL,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACpB,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,KAAK,EAAED,KAFT;AAGE,MAAA,YAAY,EAAER,KAAK,CAACU,YAHtB;AAIE,MAAA,UAAU,EAAEV,KAAK,CAACW,UAJpB;AAKE,MAAA,MAAM,EAAEX,KAAK,CAACY,MALhB;AAME,MAAA,eAAe,EAAEZ,KAAK,CAACa,eANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAAtB,CADH,GAWGb,KAAK,CAACI,aAAN,CAAoBG,GAApB,CAAwB,UAAAC,KAAK;AAAA,WAC3B,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,KAAK,EAAED,KAFT;AAGE,MAAA,YAAY,EAAER,KAAK,CAACU,YAHtB;AAIE,MAAA,UAAU,EAAEV,KAAK,CAACW,UAJpB;AAKE,MAAA,MAAM,EAAEX,KAAK,CAACY,MALhB;AAME,MAAA,eAAe,EAAEZ,KAAK,CAACa,eANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD2B;AAAA,GAA7B,CAhBN,CADK;AAAA,CAHK,CAAZ;AAiCAd,GAAG,CAACe,SAAJ,GAAgB;AACdJ,EAAAA,YAAY,EAAElB,SAAS,CAACuB,IAAV,CAAeC,UADf;AAEdL,EAAAA,UAAU,EAAEnB,SAAS,CAACyB,MAAV,CAAiBD,UAFf;AAGdJ,EAAAA,MAAM,EAAEpB,SAAS,CAAC0B,IAAV,CAAeF,UAHT;AAIdV,EAAAA,MAAM,EAAEd,SAAS,CAAC2B,KAAV,CAAgBH,UAJV;AAKdZ,EAAAA,aAAa,EAAEZ,SAAS,CAAC2B,KAAV,CAAgBH;AALjB,CAAhB,C,CAQA;AACA;AACA;AACA;;AACA,IAAIT,GAAJ,EAASa,UAAT;;AACA,SAASC,OAAT,GAAmB;AACjBd,EAAAA,GAAG,GAAG,IAAIe,MAAM,CAACC,IAAP,CAAYxB,GAAhB,CAAoByB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoD;AACxDC,IAAAA,MAAM,EAAE;AAACzB,MAAAA,GAAG,EAAE,CAAC,MAAP;AAAeC,MAAAA,GAAG,EAAE;AAApB,KADgD;AAExDyB,IAAAA,IAAI,EAAE;AAFkD,GAApD,CAAN;AAIAP,EAAAA,UAAU,GAAG,IAAIE,MAAM,CAACC,IAAP,CAAYK,UAAhB,EAAb,CALiB,CAOjB;;AACA,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1D,UAAIC,GAAG,GAAG;AACRhC,QAAAA,GAAG,EAAE+B,QAAQ,CAACE,MAAT,CAAgBC,QADb;AAERjC,QAAAA,GAAG,EAAE8B,QAAQ,CAACE,MAAT,CAAgBE;AAFb,OAAV;AAKAhB,MAAAA,UAAU,CAACiB,WAAX,CAAuBJ,GAAvB;AACAb,MAAAA,UAAU,CAACkB,UAAX,CAAsB,yBAAtB;AACAlB,MAAAA,UAAU,CAACmB,IAAX,CAAgBhC,GAAhB;AACAA,MAAAA,GAAG,CAACiC,SAAJ,CAAcP,GAAd;AACD,KAVD,EAUG,YAAW;AACZQ,MAAAA,mBAAmB,CAAC,IAAD,EAAOrB,UAAP,EAAmBb,GAAG,CAACmC,SAAJ,EAAnB,CAAnB;AACD,KAZD;AAaD,GAdD,MAcO;AACL;AACAD,IAAAA,mBAAmB,CAAC,KAAD,EAAQrB,UAAR,EAAoBb,GAAG,CAACmC,SAAJ,EAApB,CAAnB;AACD;AACF;;AAED,SAASD,mBAAT,CAA6BE,qBAA7B,EAAoDvB,UAApD,EAAgEa,GAAhE,EAAqE;AACnEb,EAAAA,UAAU,CAACiB,WAAX,CAAuBJ,GAAvB;AACAb,EAAAA,UAAU,CAACkB,UAAX,CAAsBK,qBAAqB,GACrB,wCADqB,GAErB,mDAFtB;AAGAvB,EAAAA,UAAU,CAACmB,IAAX,CAAgBhC,GAAhB;AACD;;AAED,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { GoogleMap, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport MapStyles from '../../utils/mapStyles.json';\nimport MarkerInfo from '../MarkerInfo/MarkerInfo';\nimport './Map.css';\n\nconst Map = compose(\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap\n    defaultZoom={16}\n    center={{ lat: 37.8006568, lng: -122.4516305 }}\n    defaultOptions={{ styles: MapStyles }}\n  >\n    {props.showingPlaces.length === 0\n      ? props.places.map(place => (\n          <MarkerInfo\n            key={place.id}\n            place={place}\n            onToggleOpen={props.onToggleOpen}\n            showInfoId={props.showInfoId}\n            action={props.action}\n            markerAnimation={props.markerAnimation}\n          />\n        ))\n      : props.showingPlaces.map(place => (\n          <MarkerInfo\n            key={place.id}\n            place={place}\n            onToggleOpen={props.onToggleOpen}\n            showInfoId={props.showInfoId}\n            action={props.action}\n            markerAnimation={props.markerAnimation}\n          />\n        ))}\n  </GoogleMap>\n));\n\nMap.propTypes = {\n  onToggleOpen: PropTypes.func.isRequired,\n  showInfoId: PropTypes.string.isRequired,\n  action: PropTypes.bool.isRequired,\n  places: PropTypes.array.isRequired,\n  showingPlaces: PropTypes.array.isRequired\n};\n\n// Note: This example requires that you consent to location sharing when\n// prompted by your browser. If you see the error \"The Geolocation service\n// failed.\", it means you probably did not give permission for the browser to\n// locate you.\nvar map, infoWindow;\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById('map'), {\n    center: {lat: -34.397, lng: 150.644},\n    zoom: 16\n  });\n  infoWindow = new google.maps.InfoWindow;\n\n  // Try HTML5 geolocation.\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      var pos = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n\n      infoWindow.setPosition(pos);\n      infoWindow.setContent('Your Emergency Location');\n      infoWindow.open(map);\n      map.setCenter(pos);\n    }, function() {\n      handleLocationError(true, infoWindow, map.getCenter());\n    });\n  } else {\n    // Browser doesn't support Geolocation\n    handleLocationError(false, infoWindow, map.getCenter());\n  }\n}\n\nfunction handleLocationError(browserHasGeolocation, infoWindow, pos) {\n  infoWindow.setPosition(pos);\n  infoWindow.setContent(browserHasGeolocation ?\n                        'Error: The Geolocation service failed.' :\n                        'Error: Your browser doesn\\'t support geolocation.');\n  infoWindow.open(map);\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}