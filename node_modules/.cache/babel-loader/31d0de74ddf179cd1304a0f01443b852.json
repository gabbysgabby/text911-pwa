{"ast":null,"code":"var _jsxFileName = \"/Users/Gabby/text911-reactpwa/src/components/Map/Map.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { GoogleMap, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport MapStyles from '../../utils/mapStyles.json';\nimport MarkerInfo from '../MarkerInfo/MarkerInfo';\nimport './Map.css';\nvar Map = compose(withScriptjs, withGoogleMap)(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 17,\n    center: {\n      lat: 37.8006568,\n      lng: -122.4516305\n    },\n    defaultOptions: {\n      styles: MapStyles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.showingPlaces.length === 0 ? props.places.map(function (place) {\n    return React.createElement(MarkerInfo, {\n      key: place.id,\n      place: place,\n      onToggleOpen: props.onToggleOpen,\n      showInfoId: props.showInfoId,\n      action: props.action,\n      markerAnimation: props.markerAnimation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }) : props.showingPlaces.map(function (place) {\n    return React.createElement(MarkerInfo, {\n      key: place.id,\n      place: place,\n      onToggleOpen: props.onToggleOpen,\n      showInfoId: props.showInfoId,\n      action: props.action,\n      markerAnimation: props.markerAnimation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }));\n});\nMap.propTypes = {\n  onToggleOpen: PropTypes.func.isRequired,\n  showInfoId: PropTypes.string.isRequired,\n  action: PropTypes.bool.isRequired,\n  places: PropTypes.array.isRequired,\n  showingPlaces: PropTypes.array.isRequired\n};\nexport default Map;","map":{"version":3,"sources":["/Users/Gabby/text911-reactpwa/src/components/Map/Map.js"],"names":["React","PropTypes","compose","GoogleMap","withGoogleMap","withScriptjs","MapStyles","MarkerInfo","Map","props","lat","lng","styles","showingPlaces","length","places","map","place","id","onToggleOpen","showInfoId","action","markerAnimation","propTypes","func","isRequired","string","bool","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,YAAnC,QAAuD,mBAAvD;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,WAAP;AAEA,IAAMC,GAAG,GAAGN,OAAO,CACjBG,YADiB,EAEjBD,aAFiB,CAAP,CAGV,UAAAK,KAAK;AAAA,SACL,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,UAAP;AAAmBC,MAAAA,GAAG,EAAE,CAAC;AAAzB,KAFV;AAGE,IAAA,cAAc,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGG,KAAK,CAACI,aAAN,CAAoBC,MAApB,KAA+B,CAA/B,GACGL,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACpB,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,KAAK,EAAED,KAFT;AAGE,MAAA,YAAY,EAAER,KAAK,CAACU,YAHtB;AAIE,MAAA,UAAU,EAAEV,KAAK,CAACW,UAJpB;AAKE,MAAA,MAAM,EAAEX,KAAK,CAACY,MALhB;AAME,MAAA,eAAe,EAAEZ,KAAK,CAACa,eANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAAtB,CADH,GAWGb,KAAK,CAACI,aAAN,CAAoBG,GAApB,CAAwB,UAAAC,KAAK;AAAA,WAC3B,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,KAAK,EAAED,KAFT;AAGE,MAAA,YAAY,EAAER,KAAK,CAACU,YAHtB;AAIE,MAAA,UAAU,EAAEV,KAAK,CAACW,UAJpB;AAKE,MAAA,MAAM,EAAEX,KAAK,CAACY,MALhB;AAME,MAAA,eAAe,EAAEZ,KAAK,CAACa,eANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD2B;AAAA,GAA7B,CAhBN,CADK;AAAA,CAHK,CAAZ;AAiCAd,GAAG,CAACe,SAAJ,GAAgB;AACdJ,EAAAA,YAAY,EAAElB,SAAS,CAACuB,IAAV,CAAeC,UADf;AAEdL,EAAAA,UAAU,EAAEnB,SAAS,CAACyB,MAAV,CAAiBD,UAFf;AAGdJ,EAAAA,MAAM,EAAEpB,SAAS,CAAC0B,IAAV,CAAeF,UAHT;AAIdV,EAAAA,MAAM,EAAEd,SAAS,CAAC2B,KAAV,CAAgBH,UAJV;AAKdZ,EAAAA,aAAa,EAAEZ,SAAS,CAAC2B,KAAV,CAAgBH;AALjB,CAAhB;AAQA,eAAejB,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { GoogleMap, withGoogleMap, withScriptjs } from 'react-google-maps';\nimport MapStyles from '../../utils/mapStyles.json';\nimport MarkerInfo from '../MarkerInfo/MarkerInfo';\nimport './Map.css';\n\nconst Map = compose(\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap\n    defaultZoom={17}\n    center={{ lat: 37.8006568, lng: -122.4516305 }}\n    defaultOptions={{ styles: MapStyles }}\n  >\n    {props.showingPlaces.length === 0\n      ? props.places.map(place => (\n          <MarkerInfo\n            key={place.id}\n            place={place}\n            onToggleOpen={props.onToggleOpen}\n            showInfoId={props.showInfoId}\n            action={props.action}\n            markerAnimation={props.markerAnimation}\n          />\n        ))\n      : props.showingPlaces.map(place => (\n          <MarkerInfo\n            key={place.id}\n            place={place}\n            onToggleOpen={props.onToggleOpen}\n            showInfoId={props.showInfoId}\n            action={props.action}\n            markerAnimation={props.markerAnimation}\n          />\n        ))}\n  </GoogleMap>\n));\n\nMap.propTypes = {\n  onToggleOpen: PropTypes.func.isRequired,\n  showInfoId: PropTypes.string.isRequired,\n  action: PropTypes.bool.isRequired,\n  places: PropTypes.array.isRequired,\n  showingPlaces: PropTypes.array.isRequired\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}