{"ast":null,"code":"import _classCallCheck from \"/Users/Gabby/Downloads/text911-pwa-feature-swipe-btn-3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Gabby/Downloads/text911-pwa-feature-swipe-btn-3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Gabby/Downloads/text911-pwa-feature-swipe-btn-3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Gabby/Downloads/text911-pwa-feature-swipe-btn-3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Gabby/Downloads/text911-pwa-feature-swipe-btn-3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Gabby/Downloads/text911-pwa-feature-swipe-btn-3/src/components/Map/Map.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapboxgl, { GeolocateControl } from 'mapbox-gl';\nimport './Map.css';\nvar TOKEN = 'pk.eyJ1IjoiZ2FiYnlnYWJieSIsImEiOiJjazZsYzgwaDEwMmFhM2hwaG1nMWZvcnpzIn0.Fw8Z5U4PoaEIQACGzQ2mYA';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      long: 0,\n      lat: 0\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      };\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.setState({\n          long: position.coords.longitude,\n          lat: position.coords.latitude\n        });\n\n        fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(position.coords.longitude, \",\").concat(position.coords.latitude, \".json?access_token=\").concat(TOKEN)).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          var address = response.features[0].place_name;\n          var coordinates = document.getElementById('coordinates');\n          coordinates.innerHTML = address;\n        });\n      }, function (error) {});\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var coords = [this.state.long, this.state.lat];\n      mapboxgl.accessToken = TOKEN;\n      var map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/mapbox/dark-v10',\n        center: [this.state.long, this.state.lat],\n        // starting position\n        zoom: 16 // starting zoom\n\n      });\n      map.resize();\n      map.on('load', function () {\n        var marker = new mapboxgl.Marker({\n          draggable: true\n        }).setLngLat(coords).addTo(map);\n\n        function add_marker(event) {\n          var coordinates = event.lngLat;\n          marker.setLngLat(coordinates).addTo(map);\n          fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(coordinates.lng, \",\").concat(coordinates.lat, \".json?access_token=\").concat(TOKEN)).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            var address = response.features[0].place_name;\n            var coordinates = document.getElementById('coordinates');\n            coordinates.innerHTML = address;\n          });\n        }\n\n        function onDragEnd() {\n          var lngLat = marker.getLngLat();\n          marker.setLngLat(lngLat).addTo(map);\n          fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(lngLat.lng, \",\").concat(lngLat.lat, \".json?access_token=\").concat(TOKEN)).then(function (response) {\n            return response.json();\n          }).then(function (response) {\n            var address = response.features[0].place_name;\n            var coordinates = document.getElementById('coordinates');\n            coordinates.innerHTML = address;\n          });\n        }\n\n        marker.on('dragend', onDragEnd);\n        map.on('click', add_marker);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('state', this.state.long, this.state.lat);\n      return React.createElement(\"div\", {\n        style: {\n          justifyContent: 'center',\n          alignContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this3.mapContainer = el;\n        },\n        id: \"map\",\n        style: {\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          left: 0,\n          bottom: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"coordinates\",\n        className: \"coordinates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default connect(mapStateToProps)(Map);","map":{"version":3,"sources":["/Users/Gabby/Downloads/text911-pwa-feature-swipe-btn-3/src/components/Map/Map.js"],"names":["React","Component","connect","mapboxgl","GeolocateControl","TOKEN","Map","props","state","long","lat","options","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","getCurrentPosition","position","setState","coords","longitude","latitude","fetch","then","response","json","address","features","place_name","coordinates","document","getElementById","innerHTML","error","accessToken","map","container","style","center","zoom","resize","on","marker","Marker","draggable","setLngLat","addTo","add_marker","event","lngLat","lng","onDragEnd","getLngLat","console","log","justifyContent","alignContent","el","mapContainer","top","right","left","bottom","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapboxgl, { GeolocateControl } from 'mapbox-gl';\nimport './Map.css';\n\nconst TOKEN = 'pk.eyJ1IjoiZ2FiYnlnYWJieSIsImEiOiJjazZsYzgwaDEwMmFhM2hwaG1nMWZvcnpzIn0.Fw8Z5U4PoaEIQACGzQ2mYA';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      long: 0,\n      lat: 0\n    };\n  }\n\n  componentDidMount() {\n    var options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.setState({ long: position.coords.longitude, lat: position.coords.latitude });\n      fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${position.coords.longitude},${position.coords.latitude}.json?access_token=${TOKEN}`)\n        .then(response => response.json())\n        .then(response => {\n          const address = response.features[0].place_name;\n          var coordinates = document.getElementById('coordinates')\n          coordinates.innerHTML = address;\n      });\n    }, (error) => { });\n  }\n  componentDidUpdate() {\n    const coords = [this.state.long, this.state.lat];\n    mapboxgl.accessToken = TOKEN;\n    var map = new mapboxgl.Map({\n      container: 'map', // container id\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [this.state.long, this.state.lat], // starting position\n      zoom: 16 // starting zoom\n    });\n    map.resize();\n    map.on('load', function() {\n\n      var marker = new mapboxgl.Marker({\n        draggable: true,\n      }).setLngLat(coords).addTo(map);\n\n      function add_marker (event) {\n        var coordinates = event.lngLat;\n        marker.setLngLat(coordinates).addTo(map);\n        fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${coordinates.lng},${coordinates.lat}.json?access_token=${TOKEN}`)\n          .then(response => response.json())\n          .then(response => {\n            const address = response.features[0].place_name;\n            var coordinates = document.getElementById('coordinates')\n            coordinates.innerHTML = address;\n          });\n      }\n      function onDragEnd() {\n        var lngLat = marker.getLngLat();\n        marker.setLngLat(lngLat).addTo(map);\n        fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${lngLat.lng},${lngLat.lat}.json?access_token=${TOKEN}`)\n          .then(response => response.json())\n          .then(response => {\n            const address = response.features[0].place_name;\n            var coordinates = document.getElementById('coordinates')\n            coordinates.innerHTML = address;\n          });\n        }\n      marker.on('dragend', onDragEnd);\n      map.on('click', add_marker);\n\n    });\n  }\n  render() {\n    console.log('state', this.state.long, this.state.lat)\n    return (\n      <div style={{\n        justifyContent: 'center',\n        alignContent: 'center'\n      }}>\n        <div\n          ref={(el) => this.mapContainer = el}\n          id=\"map\"\n          style={{ position: 'absolute', top: 0, right: 0, left: 0, bottom: 300 }}\n        />\n        <p id=\"coordinates\" className=\"coordinates\"></p>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(Map)\n"]},"metadata":{},"sourceType":"module"}